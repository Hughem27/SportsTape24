{"ast":null,"code":"var _jsxFileName = \"C:\\\\SportsTapeNew\\\\SportsTapeNew\\\\src\\\\components\\\\exchangeRate.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\n\n// Mapping for main currency abreviations to full names and symbols\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst recognizedCurrencies = {\n  USD: {\n    name: 'United States Dollar',\n    symbol: '$'\n  },\n  EUR: {\n    name: 'Euro',\n    symbol: '€'\n  },\n  GBP: {\n    name: 'British Pound',\n    symbol: '£'\n  },\n  JPY: {\n    name: 'Japanese Yen',\n    symbol: '¥'\n  }\n};\nfunction ExchangeRates() {\n  _s();\n  //  Initializing the API variables\n  const [rates, setRates] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  //  Pulling in latest exchange rates from the API with UseEffect Hook\n  useEffect(() => {\n    axios.get('https://v6.exchangerate-api.com/v6/6ec6dea307f64076b6df2a56/latest/EUR').then(response => {\n      setRates(response.data.conversion_rates);\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching exchange rates:', error);\n    });\n  }, []);\n\n  //  Rendering the currency and rates\n  const renderCurrencyCard = (currency, rate) => {\n    const currencyInfo = recognizedCurrencies[currency];\n\n    //  Displaying the currencies and rates\n    return /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: currencyInfo ? currencyInfo.name : currency\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [currency, \" - \\u20AC1 = \", currencyInfo ? currencyInfo.symbol : '', rate.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  };\n\n  //  to display loading if the information is still loading\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Splitting the rates into two seperate sections (main currecncies) and also less known currencies\n  const recognizedCurrenciesList = Object.entries(rates).filter(([currency]) => recognizedCurrencies.hasOwnProperty(currency));\n  const unrecognizedCurrenciesList = Object.entries(rates).filter(([currency]) => !recognizedCurrencies.hasOwnProperty(currency));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Top Currencies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center\",\n        children: recognizedCurrenciesList.map(([currency, rate]) => /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          className: \"mb-4\",\n          children: renderCurrencyCard(currency, rate)\n        }, currency, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Other Currencies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center\",\n        children: unrecognizedCurrenciesList.map(([currency, rate]) => /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          className: \"mb-4\",\n          children: renderCurrencyCard(currency, rate)\n        }, currency, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card text-white bg-secondary my-5 py-4 text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-white m-0\",\n          children: \"End of up to date currencies!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'white'\n        },\n        children: \"w\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n_s(ExchangeRates, \"ptL+cUFV8qe56K/zMPzeI8tnq84=\");\n_c = ExchangeRates;\nexport default ExchangeRates;\nvar _c;\n$RefreshReg$(_c, \"ExchangeRates\");","map":{"version":3,"names":["React","useState","useEffect","axios","Card","Row","Col","Container","jsxDEV","_jsxDEV","recognizedCurrencies","USD","name","symbol","EUR","GBP","JPY","ExchangeRates","_s","rates","setRates","loading","setLoading","get","then","response","data","conversion_rates","catch","error","console","renderCurrencyCard","currency","rate","currencyInfo","children","Body","Title","fileName","_jsxFileName","lineNumber","columnNumber","Text","toFixed","recognizedCurrenciesList","Object","entries","filter","hasOwnProperty","unrecognizedCurrenciesList","className","map","md","style","color","_c","$RefreshReg$"],"sources":["C:/SportsTapeNew/SportsTapeNew/src/components/exchangeRate.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\n// Mapping for main currency abreviations to full names and symbols\r\nconst recognizedCurrencies = {\r\n    USD: { name: 'United States Dollar', symbol: '$' },\r\n    EUR: { name: 'Euro', symbol: '€' },\r\n    GBP: { name: 'British Pound', symbol: '£' },\r\n    JPY: { name: 'Japanese Yen', symbol: '¥' },   \r\n};\r\n\r\nfunction ExchangeRates() {\r\n    //  Initializing the API variables\r\n    const [rates, setRates] = useState({});\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    //  Pulling in latest exchange rates from the API with UseEffect Hook\r\n    useEffect(() => {\r\n        axios.get('https://v6.exchangerate-api.com/v6/6ec6dea307f64076b6df2a56/latest/EUR')\r\n            .then(response => {\r\n                setRates(response.data.conversion_rates);\r\n                setLoading(false);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching exchange rates:', error);\r\n            });\r\n    }, []);\r\n\r\n    //  Rendering the currency and rates\r\n    const renderCurrencyCard = (currency, rate) => {\r\n        const currencyInfo = recognizedCurrencies[currency];\r\n\r\n        //  Displaying the currencies and rates\r\n        return (\r\n            <Card>\r\n                <Card.Body>\r\n                    <Card.Title>\r\n                        <strong>{currencyInfo ? currencyInfo.name : currency}</strong>\r\n                    </Card.Title>\r\n                    <Card.Text>\r\n                        {currency} - €1 = {currencyInfo ? currencyInfo.symbol : ''}{rate.toFixed(2)}\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    };\r\n\r\n    //  to display loading if the information is still loading\r\n    if (loading) {\r\n        return <p>Loading...</p>;\r\n    }\r\n\r\n    // Splitting the rates into two seperate sections (main currecncies) and also less known currencies\r\n    const recognizedCurrenciesList = Object.entries(rates)\r\n        .filter(([currency]) => recognizedCurrencies.hasOwnProperty(currency));\r\n    const unrecognizedCurrenciesList = Object.entries(rates)\r\n        .filter(([currency]) => !recognizedCurrencies.hasOwnProperty(currency));\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <h2>Top Currencies</h2>\r\n                <Row className=\"justify-content-center\">\r\n                    {recognizedCurrenciesList.map(([currency, rate]) => (\r\n                        <Col key={currency} md={6} className=\"mb-4\">\r\n                            {renderCurrencyCard(currency, rate)}\r\n                        </Col>\r\n                    ))}\r\n                </Row>\r\n                <h2>Other Currencies</h2>\r\n                <Row className=\"justify-content-center\">\r\n                    {unrecognizedCurrenciesList.map(([currency, rate]) => (\r\n                        <Col key={currency} md={6} className=\"mb-4\">\r\n                            {renderCurrencyCard(currency, rate)}\r\n                        </Col>\r\n                    ))}\r\n                </Row>\r\n\r\n            </Container>\r\n            <div className=\"card text-white bg-secondary my-5 py-4 text-center\">\r\n                <div className=\"card-body\"><h3 className=\"text-white m-0\">End of up to date currencies!</h3></div>\r\n            </div>\r\n            <div>\r\n                <p style={{color:'white'}}>w</p>\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default ExchangeRates;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}